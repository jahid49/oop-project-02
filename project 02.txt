#includebitsstdc++.h

using namespace std;

class BookStore;

class Book
{
        string book_name, writer_name, category;
        double price;
        int quantity = 0;
    public
        Book(){}
        Book(string book_name, string writer_name, string category, double price, int quantity)
        {
            book_name = book_name;
            writer_name = writer_name;
            category = category;
            price = price;
            quantity += quantity;
        }
        void getBookDetails()
        {
            coutBook name book_nameendl;
            coutWriter name writer_nameendl;
            coutPrice priceendl;
            coutCategory categoryendl;
            coutQuantity quantityendl;
        }
        double getPrice(int x)
        {
            return price;
        }
        double getQuantity(int x)
        {
            return quantity;
        }
        void setQuantity(int x)
        {
            quantity += x;
        }
        friend double selectBook( BookStore store );
};

class Customer
{
        string name, date_of_birth;
        double bill = 0;
        string customer_number;
        vectorint book_numbers;
    public
        Customer(){}
        Customer(string name,string dob, string customer_number)
        {
            name = name;
            date_of_birth = dob;
            customer_number = customer_number;
        }
        double getBill()
        {
            return bill;
        }
        string getID()
        {
            return customer_number;
        }
        void getCustomerDetails()
        {
            coutCustomer Number customer_numberendl;
            coutCustomer Name nameendl;
            coutDate of Birth date_of_birthendl;
            coutDue billendl;
        }
        void clearBill()
        {
            bill = 0;
        }
        void setBill(double x)
        {
            bill += x;
        }
};


class BookStore
{
        vectorCustomer customers;
        vectorBook books;

    public
        int isCustomer(string customer_id)
        {
            int i;
            for(i = 0; i  customers.size(); i++)
            {
                coutcustomers[i].getID()endl;
                if(customers[i].getID() == customer_id)
                {
                    return i;
                }
            }
            return -1;
        }

        friend double selectBook(BookStore store);

        void addCustomer(Customer c)
        {
            customers.push_back(c);
        }
        void setBill(int i, double x)
        {
            customers[i].setBill(x);
        }
        void addBook(Book b)
        {
            books.push_back(b);
        }
        Customer getCustomer(int i)
        {
            return customers[i];
        }
        void clearBill(int i)
        {
            customers[i].clearBill();
        }
};

double selectBook( BookStore store )
{
    double prices = 0;
    for(int i = 0; i  store.books.size(); i++)
    {
        int x;
        store.books[i].getBookDetails();
        coutEnter 1 to buy book, 0 to ignore ;
        cinx;
        if(x==1) prices += store.books[i].price;
    }
    return prices;
}

int main()
{
    int option;
    BookStore bookStore;
    while(1)
    {
        cout -----------------------------------endl;
        cout Enter Menuendl;
        cout 1  Input Customer in Bookstoreendl;
        cout 2  Input Book in Bookstoreendl;
        cout 3  Buy booksendl;
        cout 4  Get Customer dataendl;
        cout 5  Clear Paymentendl;
        cout 0  Exitendl;

        cinoption;

        switch(option){
            case 0
                return 0;
                break;
            case 1{
                string name,dob,id;
                coutEnter Customer Name ;
                cinname;
                coutEnter Customer Date of birth ;
                cindob;
                coutEnter Customer ID ;
                cinid;
                Customer customer(name,dob,id);
                bookStore.addCustomer(customer);
                break;}
            case 2{
                string name,writer,category;
                double price; int qty;
                coutEnter book name ;
                cinname;
                coutEnter writer name ;
                cinwriter;
                coutEnter Category ;
                cincategory;
                coutEnter Price ;
                cinprice;
                coutEnter quantity ;
                cinqty;
                bookStore.addBook(Book(name,writer,category,price,qty));
                break;}
            case 3{
                string id;
                coutEnter customer number ;
                cinid;
                int customer_id = bookStore.isCustomer(id);
                if(customer_id!=-1)
                {
                    double bill = selectBook(bookStore);
                    bookStore.setBill(customer_id, bill);
                }
                else coutUser Not Found!endl;
                break;}
            case 4{
                string id;
                coutPlease enter customer number ;
                cinid;
                int customer_id = bookStore.isCustomer(id);
                if(customer_id!=-1)
                {
                    Customer c = bookStore.getCustomer(customer_id);
                    c.getCustomerDetails();
                }
                else coutUser Not Found!endl;
                break;}
            case 5{
                string id;
                coutPlease enter customer number ;
                cinid;
                int customer_id = bookStore.isCustomer(id);
                if(customer_id!=-1)
                {
                    Customer c = bookStore.getCustomer(customer_id);
                    coutPayment Amount  c.getBill().95 Taka(5%% discount) ;
                    double amount;
                    cinamount;
                    if((c.getBill().95)==amount)
                    {
                        bookStore.clearBill(customer_id);
                    }
                }
                else coutUser Not Found!endl;
                break;}
            default
                cinoption;

        }

    }
    return 0;
}
